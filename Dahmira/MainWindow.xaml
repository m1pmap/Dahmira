<Window x:Class="Dahmira.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dahmira"
        mc:Ignorable="d"
        Title="Dahmira" Height="1080" Width="1920" WindowStyle="ThreeDBorderWindow" PreviewKeyDown="CalcDataGrid_PreviewKeyDown" Closing="Window_Closing">

    <!--Стиль для кнопок с закруглёнными краями-->
    <Window.Resources>
        <ControlTemplate TargetType="Button" x:Key="btTemplate">
            <Border x:Name="border"
                    CornerRadius="10"
                    Background="{TemplateBinding Background}">
                <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center">
                    <Image Source="{TemplateBinding Tag}" Width="20" Height="20" Margin="5"/>
                    <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Content="{TemplateBinding Content}" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="LightBlue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                         Background="White"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="1.7"
                         CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Изменение цвета при фокусе -->
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="CornFlowerBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate TargetType="Button" x:Key="dependencyDataGridRemoveBtTemplate">
            <Border x:Name="border"
            CornerRadius="5"
            Background="{TemplateBinding Background}">
                <StackPanel Orientation="Horizontal" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center">
                    <Image Source="{TemplateBinding Tag}" Width="20" Height="20" Margin="5"/>
                    <ContentPresenter HorizontalAlignment="Center" 
                              VerticalAlignment="Center" 
                              Content="{TemplateBinding Content}" 
                              ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="LightSkyBlue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="Button" x:Key="dataGridBtTemplate">
            <Border x:Name="border"
            CornerRadius="5"
            Background="{TemplateBinding Background}">
                <StackPanel Orientation="Horizontal" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center">
                    <ContentPresenter HorizontalAlignment="Center" 
                              VerticalAlignment="Center" 
                              Content="{TemplateBinding Content}" 
                              ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="CornflowerBlue"/>
                    <Setter Property="Foreground" Value="White"/>
                    <!-- Изменение цвета текста -->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="Button" x:Key="dependencyDataGridBtTemplate">
            <Border x:Name="border"
            CornerRadius="5"
            Background="{TemplateBinding Background}">
                <StackPanel Orientation="Horizontal" 
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
                    <ContentPresenter HorizontalAlignment="Center" 
                      VerticalAlignment="Center" 
                      Content="{TemplateBinding Content}" 
                      ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="CornflowerBlue"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter TargetName="border" Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="Gray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="Gray"/>
            <!-- Цвет текста -->
            <Setter Property="Background" Value="White"/>
            <!-- Цвет фона -->
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!--Стиль для dataGrid-->
        <Style TargetType="DataGrid">
            <!-- Make the border and grid lines a little less imposing -->
            <Setter Property="BorderBrush" Value="#DDDDDD" />
            <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
            <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

            <Setter Property="RowStyle">
                <Setter.Value>

                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <!-- Highlight a grid row as the mouse passes over -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightSkyBlue"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <!--Highlight selected rows-->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="CornflowerBlue"/>
                                <Setter Property="BorderBrush" Value="CornflowerBlue"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="LightSkyBlue"/>
                                <Setter Property="BorderBrush" Value="LightSkyBlue"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>
                        <!-- Add some padding around the contents of a cell -->
                        <Setter Property="Tag" Value="{Binding IsEditing, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="Padding" Value="4,3,4,3" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style TargetType="Control">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton">
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="12">
                                <Grid>
                                    <Ellipse x:Name="toggleCircle" Fill="White" Width="24" Height="24" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="toggleCircle" Property="HorizontalAlignment" Value="Right"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>



    <Grid Background="Gray">
        <Grid.RowDefinitions>
            <RowDefinition Height="46"/>
            <RowDefinition Height="237"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Контур с меню-->
        <Border BorderBrush="Black" CornerRadius="15,15,15,15" Background="White" Margin="5,10,5,5">
            <Grid>
                <Menu Background="Transparent" Margin="15,0,0,0">
                    <MenuItem Header="ФАЙЛ" Height="32" FontFamily="Arial Black" Foreground="#FF585454">
                        <MenuItem x:Name="newCalc_menuItem" Header="Новый расчёт" Click="newCalc_menuItem_Click"></MenuItem>
                        <MenuItem x:Name="openCalc_menuItem" Header="Загрузить расчёт" Click="openCalc_menuItem_Click"></MenuItem>
                        <MenuItem x:Name="saveCaalc_menuItem" Header="Сохранить расчёт" Click="saveCaalc_menuItem_Click" ></MenuItem>
                        <MenuItem x:Name="saveCaalcAs_menuItem" Header="Сохранить расчёт как" Click="saveCaalcAs_menuItem_Click" ></MenuItem>
                        <MenuItem x:Name="addCaalc_menuItem" Header="Добавить расчёт" Click="addCaalc_menuItem_Click" ></MenuItem>
                        <Separator/>
                        <MenuItem x:Name="uploadDataBase_menuItem" Header="Загрузить прайс с другого источника" Click="uploadDataBase_menuItem_Click"></MenuItem>
                        <MenuItem x:Name="downloadDataBaseFromFtp_menuItem" Header="Загрузить прайс с сервера" Click="downloadDataBaseFromFtp_menuItem_Click"></MenuItem>
                        <Separator/>
                        <MenuItem x:Name="Templates_menuItem" Header="Шаблоны прайса" Click="templates_menuItem_Click"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="ДАННЫЕ" Foreground="#FF585454" FontFamily="Arial Black" >
                        <MenuItem x:Name="exportCalcToPrice_menuItem"
                  Header="Перенести выбранные строки из расчёта в прайс"
                  Click="ExportCalcToPrice_button_Click">
                        </MenuItem>
                        <MenuItem x:Name="exportAllCalcToPrice_menuItem"
                  Header="Перенести все строки из расчёта в прайс"
                  Click="ExportAllCalcToPrice_button_Click">
                        </MenuItem>
                        <MenuItem x:Name="duplicateSearch_menuItem"
                  Header="Поик одинаковых артикулов в прайсе"
                  Click="duplicateSearch_menuItem_Click">
                        </MenuItem>
                        <Separator/>
                        <MenuItem x:Name="LoadPriceFromExcel_menuItem" Header="Загрузить прайс-лист из Excel" Click="LoadPriceFromExcel_buttunClic"></MenuItem>
                        <MenuItem x:Name="UnloadPriceListToExcel_menuItem" Header="Выгрузить прайс-лист в Excel" Click="UnloadPriceListToExcel_buttunClic"></MenuItem>
                        <Separator/>
                        <MenuItem x:Name="UpdatePriceFromExcel_menuItem" Header="Обновить цену из Excel" Click="UpdatePriceFromExcel_buttunClic"></MenuItem>
                        <MenuItem x:Name="ChangePriceInPrice_menuItem" Header="Изменить цену в прайсе" Click="ChangePriceInPrice_buttunClic"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="НАСТРОЙКИ" Foreground="#FF585454" FontFamily="Arial Black" >
                        <MenuItem x:Name="log_menuItem" Header="Логирование" Click="log_menuItem_Click"></MenuItem>
                        <Separator/>
                        <MenuItem x:Name="simpleSettings_menuItem"
                  Header="Настройки"
                  Click="simpleSettings_menuItem_Click">
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="СПРАВКА" Foreground="#FF585454" FontFamily="Arial Black" >
                        <MenuItem Header="Что нового" x:Name="whatsNew_MenuItem" Click="whatsNew_MenuItem_Click"/>
                    </MenuItem>
                </Menu>
                <Label x:Name="LastPriceUpdateDate_Label" FontSize="15" Content="Последнее обновление прайса на сервере: 01.01.1753 - Аноним" HorizontalAlignment="Right" Foreground="Gray" FontFamily="Arial Black" Margin="0,2,10,2"/>
            </Grid>

        </Border>

        <!--Контур с элементами управления-->
        <Border
            Grid.Row="1"
            Background ="White" 
            CornerRadius="15,15,15,15" 
            Margin="5,5,5,5" RenderTransformOrigin="0.501,0.554" Padding="0,0,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="38.001"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <!--Кнопка перехода на расчёт и обратно на прайс-->
                <Button x:Name="priceCalcButton" 
                        Template="{StaticResource btTemplate}"
                        Margin="10,5"
                        Content="ПРАЙС->РАСЧЁТ"
                        Background="#F8C4D5" FontFamily="Arial Black" FontWeight="Bold" Foreground="White" FontSize="14"
                        Click="priceCalcButton_Click"/>

                <!--Кнопка смены поиска или добавления прайсов-->

                <!--Сетка с функционалом добавления-->
                <Grid x:Name="addGrid" Visibility="Hidden" Grid.Row="1" Margin="5,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27.001"/>
                        <RowDefinition Height="157.986"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="64"/>
                        <ColumnDefinition Width="876"/>
                        <ColumnDefinition Width="169"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Content="Добавление в прайс" 
                           FontFamily="Arial Black" 
                           VerticalAlignment="Center" 
                           HorizontalAlignment="Left"
                           Height="29" Width="246" 
                           Foreground="Gray" 
                           FontSize="15" 
                           Grid.Column="1"/>

                    <StackPanel Grid.Column="1" Margin="5,17,0,4" Grid.RowSpan="3">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Производитель" 
                                   FontFamily="Arial" 
                                   Foreground="Gray" FontSize="12"/>

                            <Label Content="Артикул" 
                                   FontFamily="Arial" 
                                   Foreground="Gray" FontSize="12" Margin="218,0,0,0"/>

                            <Label Content="Цена" 
                                   FontFamily="Arial" 
                                   Foreground="Gray" FontSize="12" Margin="171,0,0,0"/>

                            <Label Content="Тип" 
                                   FontFamily="Arial" 
                                   Foreground="Gray" FontSize="12" Margin="95,0,0,0"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,-3,0,0">
                            <TextBox  x:Name="newManufacturer_textBox"
                                      FontSize="15" FontFamily="Arial" Foreground="#FF565353" Width="306"/>

                            <TextBox x:Name="newArticle_textBox"  
                                     FontSize="15" Margin="10,0,0,0" Foreground="#FF565353" FontFamily="Arial" Width="215"/>

                            <TextBox x:Name="newCost_textBox" 
                                     FontSize="15" Foreground="#FF565353" FontFamily="Arial" Margin="10,0,0,0" Width="125"/>

                            <TextBox x:Name="newType_textBox" 
                                     FontSize="15" Foreground="#FF565353" FontFamily="Arial" Margin="10,0,0,0" Width="195"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,-3,0,0">
                            <Label Content="Наименование" 
                                   FontFamily="Arial" 
                                   Foreground="Gray" FontSize="12"/>

                            <Label Content="Ед. измерения" 
                                   FontFamily="Arial" 
                                   Foreground="Gray" FontSize="12" Margin="582,0,0,0"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,-3,0,0">
                            <TextBox x:Name="newProductName_textBox" 
                                     FontSize="15" Foreground="#FF565353" FontFamily="Arial" Width="666"/>

                            <TextBox x:Name="newUnit_textBox" 
                                     FontSize="15" Foreground="#FF565353" FontFamily="Arial" Margin="10,0,0,0" Width="195"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,-3,0,0">
                            <Label Content="Наименование на английском" 
                                   FontFamily="Arial" 
                                   Foreground="Gray" 
                                   FontSize="12"/>

                            <Label Content="Англ. ед. измерения" 
                                   FontFamily="Arial" 
                                   Foreground="Gray" FontSize="12" Margin="500,0,0,0"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,-3,0,0">
                            <TextBox x:Name="newEnglishProductName_textBox" 
                                FontSize="15" Foreground="#FF565353" FontFamily="Arial" Width="666"/>

                            <TextBox x:Name="newEnglishUnit_textBox" 
                                     FontSize="15" Foreground="#FF565353" FontFamily="Arial" Margin="10,0,0,0" Width="195"/>
                        </StackPanel>
                    </StackPanel>

                    <Image x:Name="addedProductImage" 
                        Margin="10,2,20,51" Source="/resources/images/without_picture.png" Grid.Column="2" Grid.Row="1"/>

                    <Button x:Name="uploadFromFileAdd_button"
                        Template="{StaticResource btTemplate}" 
                        Height="40" Width="40"
                        Background="MediumSeaGreen"
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top" 
                        Margin="10,116,0,0"
                        ToolTip="Вставить из файла" Grid.Column="2" Grid.Row="1"
                        Click="uploadFromFileAdd_button_Click">

                        <Image Source="/resources/images/upload_from_file.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="deleteAdd_button"
                        Template="{StaticResource btTemplate}" 
                        Height="40" Width="40"
                        Background="OrangeRed" 
                        VerticalAlignment="Top" 
                        Margin="90,116,0,0"
                        ToolTip="Удалить фото" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1"
                        Click="deleteAdd_button_Click">

                        <Image Source="/resources/images/delete_image.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="uploadFromClipboardAdd_button"
                        Template="{StaticResource btTemplate}" Width="40"
                        Background="#FF50CBFF" 
                        Margin="-10,116,0,0"
                        ToolTip="Вставить из буфера" HorizontalAlignment="Center" Grid.Column="2" VerticalAlignment="Top" Height="40" Grid.Row="1"
                        Click="uploadFromClipboardAdd_button_Click">

                        <Image Source="/resources/images/upload_from_clipboard.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="addToPraie_button" 
                        Content="ДОБАВИТЬ В КОНЕЦ ПРАЙСА" 
                        Grid.Row="1" 
                        Width="Auto"
                        Template="{StaticResource btTemplate}" FontFamily="Arial Black"
                        Background="MediumSeaGreen" Foreground="White" FontSize="14" Margin="6,115,0,3" Grid.ColumnSpan="2"
                        Click="addToPrice_button_Click"/>
                </Grid>

                <!--Сетка с функционалом поиска и добавления в расчётку-->
                <Grid x:Name="searchGrid" Visibility="Visible"   Grid.Row="1" Margin="5,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="188.999"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="64"/>
                        <ColumnDefinition Width="642"/>
                        <ColumnDefinition Width="118*"/>
                        <ColumnDefinition Width="21"/>
                        <ColumnDefinition Width="205"/>
                        <ColumnDefinition Width="295*"/>
                        <ColumnDefinition Width="227*"/>
                        <ColumnDefinition Width="161"/>
                        <ColumnDefinition Width="172"/>
                    </Grid.ColumnDefinitions>


                    <StackPanel Grid.Column="1" Margin="5,0,0,0">
                        <Label Content="Поиск по прайсу" 
                                HorizontalAlignment="Left" 
                                FontFamily="Arial Black" 
                                Foreground="Gray" 
                                FontSize="15" Margin="-5,0,0,0"/>

                        <StackPanel Orientation="Horizontal" Margin="0,-9,0,0">
                            <Label Content="Производитель" 
                                    FontFamily="Arial Black" 
                                    Foreground="Gray" FontSize="12"/>

                            <Label Content="Артикул" 
                                    FontFamily="Arial Black" 
                                    Foreground="Gray" FontSize="12" Margin="218,0,0,0"/>

                            <Label Content="Цена" 
                                    FontFamily="Arial Black" 
                                    Foreground="Gray" FontSize="12" Margin="93,0,0,0"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,-3,0,0">
                            <Border CornerRadius="4" BorderThickness="1.7" BorderBrush="Gray" Width="321">
                                <StackPanel Orientation="Horizontal">
                                    <ComboBox x:Name ="Manufacturer_comboBox" DisplayMemberPath="name" Foreground="Gray" FontFamily="Arial" IsEditable="True"
                                              SelectionChanged="Manufacturer_comboBox_SelectionChanged" BorderThickness="0" Margin="3,0,4,0.5" FontSize="13"
                                              Loaded="Manufacturer_comboBox_Loaded" Width="311" DropDownOpened="Manufacturer_comboBox_DropDownOpened">
                                        <ComboBox.Resources>
                                            <Style TargetType="ComboBoxItem">
                                                <!-- Минимальная и максимальная ширина выпадающего списка -->
                                                <!--<Setter Property="MinWidth" Value="500"/>
                                                <Setter Property="MaxWidth" Value="500"/>-->
                                            </Style>
                                        </ComboBox.Resources>

                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>

                                    <Button x:Name="clearManufacturer_button" VerticalAlignment="Center"
                                            Template="{StaticResource btTemplate}" 
                                            Height="15.95" Width="15.95"
                                            Background="OrangeRed" 
                                            HorizontalAlignment="Left"
                                            Margin="0,0,5,0" 
                                            ToolTip="Сбросить фильтр"
                                            Click="clearManufacturer_button_Click">

                                        <Image Source="/resources/images/delete_image.png" Height="10" Width="10" Margin="-30,0,0,0"/>
                                    </Button>
                                </StackPanel>
                            </Border>

                            <Border CornerRadius="4" BorderThickness="1.7" BorderBrush="Gray" Width="150" Margin="10,0">
                                <ComboBox x:Name="Article_comboBox" 
                                          DisplayMemberPath="Article" Foreground="Gray" FontFamily="Arial" IsEditable="True"
                                          SelectionChanged="Article_comboBox_SelectionChanged" BorderThickness="0" Margin="3,0,3,0.5" FontSize="13"
                                          Loaded="Article_comboBox_Loaded">

                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </Border>

                            <Border CornerRadius="4" BorderThickness="1.7" BorderBrush="Gray" Width="146">
                                <ComboBox x:Name="Cost_comboBox" 
                                          DisplayMemberPath="Cost" Foreground="Gray" FontFamily="Arial" IsEditable="True" BorderThickness="0" Margin="3,0,3,0.5" FontSize="13"
                                          SelectionChanged="Cost_comboBox_SelectionChanged"
                                          Loaded="Cost_comboBox_Loaded">
                                    <ComboBox.Resources>
                                        <Style TargetType="ComboBoxItem">
                                            <!-- Минимальная и максимальная ширина выпадающего списка -->
                                            <!--<Setter Property="MinWidth" Value="1000"/>
                                            <Setter Property="MaxWidth" Value="1000"/>-->
                                        </Style>
                                    </ComboBox.Resources>

                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </Border>

                        </StackPanel>

                        <Label Content="Наименование" Margin="0,-3,0,0"
                               FontFamily="Arial Black" 
                               Foreground="Gray" FontSize="12"/>

                        <Border CornerRadius="4" BorderThickness="1.7" BorderBrush="Gray" Margin="0,-3,0,0">
                            <ComboBox x:Name ="ProductName_comboBox"  
                                      DisplayMemberPath="ProductName" Foreground="Gray" FontFamily="Arial" IsEditable="True" MaxHeight="18.95" MinHeight="18.95"
                                      SelectionChanged="ProductName_comboBox_SelectionChanged" BorderThickness="0" Margin="3,0,3,0.5" FontSize="13"
                                      Loaded="ProductName_comboBox_Loaded">
                                <ComboBox.Resources>
                                    <Style TargetType="ComboBoxItem">
                                        <!-- Минимальная и максимальная ширина выпадающего списка -->
                                        <Setter Property="MinWidth" Value="1000"/>
                                        <Setter Property="MaxWidth" Value="1000"/>
                                    </Style>
                                </ComboBox.Resources>

                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </Border>


                        <StackPanel Orientation="Horizontal" Margin="0,-3,0,0">
                            <Label Content="Тип" Margin="0,0,0,0"
                                   FontFamily="Arial Black" 
                                   Foreground="Gray" FontSize="12"/>

                            <Label Content="Количество" 
                                    FontFamily="Arial Black" 
                                    Foreground="Gray" FontSize="12" Margin="455,0,0,0"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,-3,0,0">
                            <Border CornerRadius="4" BorderThickness="1.7" BorderBrush="Gray" Width="481">
                                <StackPanel Orientation="Horizontal">

                                    <ComboBox x:Name ="Type_comboBox" 
                                              Foreground="Gray" FontFamily="Arial" IsEditable="True"
                                              SelectionChanged="Type_comboBox_SelectionChanged" BorderThickness="0" Margin="3,0,4,0.5" FontSize="13"
                                              Loaded="Type_comboBox_Loaded" Width="471" DropDownOpened="Type_comboBox_DropDownOpened">

                                        <ComboBox.Resources>
                                            <Style TargetType="ComboBoxItem">
                                                <!-- Минимальная и максимальная ширина выпадающего списка -->
                                                <!--<Setter Property="MinWidth" Value="500"/>
                                                <Setter Property="MaxWidth" Value="500"/>-->
                                            </Style>
                                        </ComboBox.Resources>

                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>

                                    <Button x:Name="clearType_button" VerticalAlignment="Center"
                                            Template="{StaticResource btTemplate}" 
                                            Height="15.95" Width="15.95"
                                            Background="OrangeRed" 
                                            HorizontalAlignment="Left"
                                            Margin="0,0,5,0" 
                                            ToolTip="Сбросить фильтр"
                                            Click="clearType_button_Click">

                                        <Image Source="/resources/images/delete_image.png" Height="10" Width="10" Margin="-30,0,0,0"/>
                                    </Button>
                                </StackPanel>
                            </Border>

                            <TextBox x:Name="CountProductToAdd_textBox" Text="1" FontSize="15" Foreground="Gray" FontFamily="Arial" Margin="10,0,0,0" Width="146"/>

                        </StackPanel>

                    </StackPanel>

                    <Image x:Name="productImage" Margin="14,45,14,52" Source="/resources/images/without_picture.png" Grid.Column="7"
                           MouseDown="productImage_MouseDown"/>

                    <StackPanel Grid.Column="4" Grid.ColumnSpan="2">
                        <Label Content="Информация о товаре" 
                           HorizontalAlignment="Left" 
                           FontFamily="Arial Black" 
                           Foreground="Gray" 
                           FontSize="15"
                               Margin="-5,0,0,0"/>

                        <Label Content="Производитель" Margin="0,0,0,0" 
                               FontFamily="Arial Black" 
                               Foreground="Gray" FontSize="12"/>

                        <TextBox x:Name="ManufacturerInformation_textBox" Margin="0,-3,0,0"
                                 Foreground="Gray" FontFamily="Arial"
                                 LostFocus="Information_textBox_LostFocus" FontSize="15"/>

                        <Label Content="Наименование" Margin="0,-3,0,0"
                               FontFamily="Arial Black" 
                               Foreground="Gray" FontSize="12"/>

                        <TextBox x:Name="ProductNameInformation_textBox" Foreground="Gray" FontFamily="Arial" FontSize="15" Margin="0,-3,0,0" MaxHeight="20.65" MinHeight="20.65"
                                 LostFocus="Information_textBox_LostFocus"/>

                        <Label  Content="Артикул" Margin="0,-3,0,0"
                                FontFamily="Arial Black" 
                                Foreground="Gray" FontSize="12"/>

                        <TextBox x:Name="ArticleInformation_textBox" Foreground="Gray" FontFamily="Arial" FontSize="15" Margin="0,-3,0,0"
                                 LostFocus="Information_textBox_LostFocus"/>
                    </StackPanel>

                    <StackPanel Grid.Column="6" Margin="10,27,0,0">
                        <Label  Content="Цена" 
                                FontFamily="Arial Black" 
                                VerticalAlignment="Top" 
                                Height="24" 
                                Foreground="Gray" FontSize="12"/>

                        <TextBox x:Name="CostInformation_textBox" Foreground="Gray" FontFamily="Arial" FontSize="15" Margin="0,-3,0,0"
                                 LostFocus="Information_textBox_LostFocus"/>

                        <Label  Content="Ед. изм."  Margin="0,-3,0,0"
                                FontFamily="Arial Black" 
                                Foreground="Gray" FontSize="12"/>

                        <TextBox x:Name="UnitInformation_textBox" Foreground="Gray" FontFamily="Arial" FontSize="15" Margin="0,-3,0,0"
                                 LostFocus="Information_textBox_LostFocus"/>

                        <Label  Content="Тип" Margin="0,-3,0,0"
                                FontFamily="Arial Black" 
                                Foreground="Gray" FontSize="12"/>

                        <TextBox x:Name="TypeInformation_textBox" Foreground="Gray" FontFamily="Arial" FontSize="15" Margin="0,-3,0,0"
                                 LostFocus="Information_textBox_LostFocus"/>
                    </StackPanel>


                    <Button x:Name="AddToCalc_button"
                            Content="ДОБАВИТЬ В РАСЧЁТКУ      " 
                            VerticalAlignment="Top"
                            Template="{StaticResource btTemplate}" Height="34" FontFamily="Arial Black"
                            Background="MediumSeaGreen" Foreground="White" FontSize="13" Grid.ColumnSpan="2" Margin="6,148,480,0"
                            Click="AddToCalc_button_Click"/>

                    <Button x:Name="AddToCalcUnderSelectedRow_button"
                            Content="ДОБАВИТЬ В РАСЧЁТКУ ПОД СТРОКОЙ      "
                            Grid.Column="1"
                            VerticalAlignment="Top" 
                            Width="Auto"
                            Template="{StaticResource btTemplate}" Margin="167,148,151,0" Height="34" FontFamily="Arial Black"
                            Background="Coral" Foreground="White" FontSize="13"
                            Click="AddToCalcUnderSelectedRow_button_Click"/>

                    <Button x:Name="ReplaceCalc_button"
                            Content="ЗАМЕНИТЬ      "
                            Grid.Column="1"
                            VerticalAlignment="Top" 
                            Width="Auto"
                            Template="{StaticResource btTemplate}" Margin="496,148,0,0" Height="34" FontFamily="Arial Black"
                            Background="OrangeRed" Foreground="White" FontSize="13"
                            Click="ReplaceCalc_button_Click"/>
                    <Button x:Name="uploadFromFile_button"
                        Template="{StaticResource btTemplate}" 
                        Height="40" Width="40"
                        Background="Coral"
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top"
                        ToolTip="Вставить из файла"
                        Click="uploadFromFile_button_Click" Margin="2,42,0,0" Grid.Column="8">


                        <Image Source="/resources/images/upload_from_file.png" Height="27" Width="27" Margin="-30,0,0,0"/>


                    </Button>
                    <Button x:Name="deletePhoto_button"
                        Template="{StaticResource btTemplate}" 
                        Height="40" Width="40"
                        Background="OrangeRed" 
                        VerticalAlignment="Top"
                        ToolTip="Удалить фото" HorizontalAlignment="Left" Margin="52,42,0,0"
                        Click="deletePhoto_button_Click" Grid.Column="8">

                        <Image Source="/resources/images/delete_image.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                    </Button>
                    <Button x:Name="downloadToFile_button"
                        Template="{StaticResource btTemplate}" Width="40"
                        Background="Coral" 
                        Margin="101,42,0,0"
                        ToolTip="Сохранить в файл" HorizontalAlignment="Left"
                        Click="downloadToFile_button_Click" VerticalAlignment="Top" Height="40" Grid.Column="8">

                        <Image Source="/resources/images/download_to_file.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                    </Button>
                    <Button x:Name="downloadToClipboard_button"
                        Template="{StaticResource btTemplate}" 
                        Height="40" Width="40"
                        Background="#FF50CBFF" 
                        VerticalAlignment="Top" 
                        Margin="77,90,0,0"
                        ToolTip="Сохранить в буфер" HorizontalAlignment="Left"
                        Click="downloadToClipboard_button_Click" Grid.Column="8">

                        <Image Height="27" Width="27" Margin="-30,0,0,0" Source="/resources/images/download_to_clipboard.png"/>
                    </Button>
                    <Button x:Name="uploadFromClipboard"
                        Template="{StaticResource btTemplate}" 
                        Height="40" Width="40"
                        Background="#FF50CBFF" 
                        VerticalAlignment="Top" 
                        Margin="27,90,0,0"
                        ToolTip="Вставить из буфера" HorizontalAlignment="Left"
                        Click="uploadFromClipboard_Click" Grid.Column="8">

                        <Image Source="/resources/images/upload_from_clipboard.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                    </Button>

                </Grid>

                <!--Сетка с функционалом расчётки-->
                <Grid x:Name="CulcGrid_Grid" Visibility="Hidden" Grid.Row="1" Margin="5,0,0,4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="64"/>
                        <RowDefinition Height="102.008"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="550"/>
                        <ColumnDefinition Width="35*"/>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="19*"/>
                        <ColumnDefinition Width="161"/>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="22"/>
                    </Grid.ColumnDefinitions>

                    <Image x:Name="CalcProductImage" Margin="24,45,4,29" Source="/resources/images/without_picture.png" Grid.RowSpan="2" Grid.Column="4" MouseDown="CalcProductImage_MouseDown"/>

                    <StackPanel Orientation="Horizontal" Grid.Column="5" VerticalAlignment="Top" Height="40" Margin="7,18,-7,0" Grid.Row="0" Grid.ColumnSpan="2">
                        <Button x:Name="CalcUploadFromFile"
                                Template="{StaticResource btTemplate}"
                                Height="40" Width="40"
                                Background="Coral" 
                                ToolTip="Вставить из файла"
                                Margin="5,0"
                                Click="CalcUploadFromFile_Click">

                            <Image Source="/resources/images/upload_from_file.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                        </Button>
                        <Button x:Name="CalcDeleteImage"
                                Template="{StaticResource btTemplate}"
                                Height="40" Width="40"
                                Background="OrangeRed" 
                                ToolTip="Удалить фото" 
                                Margin="5,0"
                                Click="CalcDeleteImage_Click">

                            <Image Source="/resources/images/delete_image.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                        </Button>
                        <Button x:Name="CalcDownloadToFile"
                                Template="{StaticResource btTemplate}"
                                Height="40" Width="40"
                                Background="Coral" 
                                ToolTip="Сохранить в файл" 
                                Margin="5,0"
                                Click="CalcDownloadToFile_Click">

                            <Image Source="/resources/images/download_to_file.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                        </Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Grid.Column="5" Grid.Row="1" VerticalAlignment="Top" Height="40" Margin="30,1,-7,0" Grid.ColumnSpan="2">
                        <Button x:Name="CalcUploadFromClipboard"
                                Template="{StaticResource btTemplate}"
                                Height="40" Width="40"
                                Background="#FF50CBFF" 
                                ToolTip="Вставить из буфера"
                                Margin="5,0"
                                Click="CalcUploadFromClipboard_Click">

                            <Image Source="/resources/images/upload_from_clipboard.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                        </Button>
                        <Button x:Name="CalcDownloadToClipboard"
                                Template="{StaticResource btTemplate}"
                                Height="40" Width="40"
                                Background="#FF50CBFF" 
                                ToolTip="Сохранить в буфер" 
                                Margin="5,0"
                                Click="CalcDownloadToClipboard_Click">

                            <Image Source="/resources/images/download_to_clipboard.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                        </Button>
                    </StackPanel>

                    <Label Content="НАСТРОЙКА ЦЕНЫ:" FontFamily="Arial Black" Foreground="Gray" Margin="12,45,1,22" Grid.Row="1" Grid.Column="5" Grid.ColumnSpan="2"/>

                    <Border Grid.Row="1" Grid.Column="5" BorderThickness="1.7" BorderBrush="Gray" Margin="10,68,3,12" CornerRadius="5">
                        <ComboBox x:Name="allCountries_comboBox"
                                  DisplayMemberPath="name" Foreground="Gray" FontFamily="Arial"  IsEditable="True" Margin="4,0" BorderThickness="0"
                                  SelectionChanged="allCountries_comboBox_SelectionChanged"
                                  SelectedIndex="0"  Grid.ColumnSpan="2"/>
                    </Border>




                    <StackPanel x:Name="DependencyButtons" Orientation="Vertical" Visibility="Hidden" Grid.RowSpan="2" HorizontalAlignment="Left" Margin="0,30,0,21" Width="90" Grid.Column="2">
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="addNewDependency_button"
                                    Template="{StaticResource btTemplate}" 
                                    Height="40" Width="40"
                                    Background="MediumSeaGreen"   
                                    VerticalAlignment="Top" 
                                    Margin="0,0,0,5" 
                                    ToolTip="Начать добавление зависимостей"
                                    Click="addNewDependency_button_Click">

                                <Image Source="pack://application:,,,/resources/images/add.png" Height="25" Width="25" Margin="-30,0,0,0"/>
                            </Button>

                            <Button x:Name="startStopAddingDependency_button"
                                    Template="{StaticResource btTemplate}" 
                                    Height="40" Width="40"
                                    Background="MediumSeaGreen" 
                                    VerticalAlignment="Top" 
                                    Margin="5,0,0,5" 
                                    ToolTip="Начать добавление зависимостей"
                                    Click="startStopAddingDependency_button_Click">

                                <Image x:Name="startStopAddingDependency_image" Source="pack://application:,,,/resources/images/play.png" Height="35" Width="35" Margin="-30,0,0,0"/>
                            </Button>
                        </StackPanel>

                        <Button x:Name="deleteDependency_button"
                                Template="{StaticResource btTemplate}"
                                Height="40" Width="40"
                                Background="OrangeRed"  
                                HorizontalAlignment="Left"
                                ToolTip="Удалить зависимость" 
                                Click="deleteDependency_button_Click">

                            <Image Source="/resources/images/delete_image.png" Height="27" Width="27" Margin="-30,0,0,0"/>
                        </Button>
                    </StackPanel>


                    <DataGrid x:Name="DependencyDataGrid" Margin="10,30,4,-9" Visibility="Collapsed" 
                              FontFamily="Arial Black" Foreground="Gray" 
                              RowHeaderWidth="0" Background="White" BorderThickness="1" Grid.RowSpan="2" AutoGenerateColumns="False" CanUserAddRows="False" Grid.ColumnSpan="2"
                              SelectedCellsChanged="DependencyDataGrid_SelectedCellsChanged"
                              CellEditEnding="DependencyDataGrid_CellEditEnding"
                              BeginningEdit="DependencyDataGrid_BeginningEdit">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Число" Binding="{Binding Multiplier, Converter={StaticResource NoneMultiplierDependencyConverter}}" Width="3*" MinWidth="60">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTemplateColumn Header="Позиция 1" Width="20*" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="90*"/>
                                                <ColumnDefinition Width="30"/>
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0">
                                                <Button x:Name="firstItemDependencyDataGridButton"
                                                        FontFamily="Arial Black"
                                                        Background="White" 
                                                        FontSize="12"
                                                        Content="Выбрать позицию"
                                                        Template="{StaticResource dependencyDataGridBtTemplate}" 
                                                        Width="150" Height="20"
                                                        Visibility="{Binding IsFirstButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                        Click="firstItemDependencyDataGridButton_Click">

                                                </Button>
                                                <TextBlock Text="{Binding ProductName}"
                                                           TextAlignment="Justify"
                                                           ToolTip="{Binding ProductName}"
                                                           Grid.Column="0">

                                                </TextBlock>
                                            </StackPanel>
                                            <Button Grid.Column="1" 
                                                    x:Name="firstItemDependencyDataGridRemoveButton"
                                                    Margin="5,0"
                                                    HorizontalAlignment="Right"
                                                    Background="OrangeRed"
                                                    FontFamily="Arial Black"
                                                    FontSize="12"
                                                    Visibility="{Binding IsFirstButtonVisible, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                                    Template="{StaticResource dependencyDataGridRemoveBtTemplate}" 
                                                    Width="20" Height="20"
                                                    Click="firstItemDependencyDataGridRemoveButton_Click">

                                                <Image Source="/resources/images/delete_image.png" Height="15" Width="15" Margin="-30,0,0,0"/>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridComboBoxColumn Header="Тип" Width="2*" MinWidth="50"
                                            SelectedItemBinding="{Binding SelectedType}">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.ComboBoxValues}"/>
                                        <Setter Property="FontSize" Value="18"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.ComboBoxValues}"/>
                                        <Setter Property="Foreground" Value="Gray"/>
                                        <Setter Property="FontSize" Value="18"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <EventSetter Event="SelectionChanged" Handler="DependencyType_ComboBox_SelectionChanged"/>
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>

                            <!--<DataGridTextColumn Header="ProductID" Binding="{Binding ProductId}" Width="20*" IsReadOnly="True"/>-->
                            <DataGridTemplateColumn Header="Позиция 2" Width="20*" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="90*"/>
                                                <ColumnDefinition Width="30"/>
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0">
                                                <Button x:Name="secondItemDependencyDataGridButton"
                                                        FontFamily="Arial Black"
                                                        Background="White" 
                                                        FontSize="12"
                                                        Content="Выбрать позицию"
                                                        Template="{StaticResource dependencyDataGridBtTemplate}" 
                                                        Width="150" Height="20"
                                                        Visibility="{Binding IsSecondButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                        Click="secondItemDependencyDataGridButton_Click">

                                                </Button>
                                                <TextBlock Text="{Binding SecondProductName}"
                                                           TextAlignment="Justify"
                                                           ToolTip="{Binding SecondProductName}"
                                                           Grid.Column="0">

                                                </TextBlock>
                                            </StackPanel>
                                            <Button Grid.Column="1" 
                                                    x:Name="secondItemDependencyDataGridRemoveButton"
                                                    Margin="5,0"
                                                    HorizontalAlignment="Right"
                                                    Background="OrangeRed"
                                                    FontFamily="Arial Black"
                                                    FontSize="12"
                                                    Visibility="{Binding IsSecondButtonVisible, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                                    Template="{StaticResource dependencyDataGridRemoveBtTemplate}" 
                                                    Width="20" Height="20"
                                                    Click="secondItemDependencyDataGridRemoveButton_Click">

                                                <Image Source="/resources/images/delete_image.png" Height="15" Width="15" Margin="-30,0,0,0"/>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTextColumn Header="Число" Binding="{Binding SecondMultiplier, Converter={StaticResource NoneMultiplierDependencyConverter}}" Width="3*" MinWidth="60">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Image x:Name="DependencyImage" Margin="6,30,418,18" Visibility="Visible"  Source="/resources/images/withoutDependency.png" Grid.RowSpan="2" RenderTransformOrigin="0.066,0.481"/>
                    <Label Content="Расчёт зависимостей:" HorizontalAlignment="Left" Margin="5,7,0,0" VerticalAlignment="Top" Width="213" FontSize="14" FontFamily="Arial Black" Foreground="Gray" Height="26"/>
                    <Label x:Name="MovingLabel" Content="Требуется расчёт!" FontSize="14" FontFamily="Arial Black" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="195,7,0,0" Height="26" Width="154">
                        <Label.RenderTransform>
                            <TranslateTransform x:Name="labelTransform" />
                        </Label.RenderTransform>
                    </Label>
                </Grid>
                <Button x:Name="searchGrid_Button" Visibility="Visible"
                        Template="{StaticResource btTemplate}" 
                        Height="51" Width="52"
                        Background="Coral"
                        MinHeight="51"
                        MinWidth="51" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top"
                        Margin="13,3,0,0"
                        Grid.Row="1"
    
                        Click="searchGrid_Button_Click">
                    <Image Source="/resources/images/search.png" Height="35" Width="38" Margin="-30,0,0,0"/>
                </Button>
                <Button x:Name="addGrid_Button" Visibility="Visible"
                        Template="{StaticResource btTemplate}" 
                        Height="51" Width="52"
                        Background="LightGray"
                        MinHeight="51"
                        MinWidth="51" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top"
                        Margin="13,62,0,0"
                        Grid.Row="1"
                        Click="addGrid_Button_Click">
                    <Image Source="/resources/images/add.png" Height="35" Width="38" Margin="-30,0,0,0"/>
                </Button>
            </Grid>
        </Border>

        <!--Контур с БД-->
        <Border x:Name="dataBaseBorder_border"
            Grid.Row="2"
            Background ="White" 
            CornerRadius="15,15,15,15" 
            Margin="5,5,5,5" RenderTransformOrigin="0.501,0.554">

            <Grid>
                <!--Сетка с элементами управления основной БД-->
                <Grid x:Name="DataBaseGrid_Grid" Margin="0,0,0,0" Visibility="Visible">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="61"/>
                        <RowDefinition/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>

                    <StackPanel Margin="10,10,10,10" Grid.Row="0"
                                Orientation="Horizontal">

                        <Button x:Name="deleteSelectedProduct_button"
                                Template="{StaticResource btTemplate}" 
                                Height="40" Width="40"
                                Background="OrangeRed" 
                                VerticalAlignment="Top"
                                HorizontalAlignment="Left"
                                Margin="0,0,5,0" 
                                ToolTip="Удалить выбранный товар"
                                Click="deleteSelectedProduct_button_Click">

                            <Image Source="/resources/images/delete_image.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                        </Button>

                        <Button x:Name="deleteSelectedManufacturerProducts_button"
                                Template="{StaticResource btTemplate}" 
                                Height="40" Width="40"
                                Background="Coral" 
                                VerticalAlignment="Top" 
                                Margin="0,0,5,0"
                                ToolTip="Удалить производителя"
                                Click="deleteSelectedManufacturerProducts_button_Click">

                            <Image Source="/resources/images/delete_manufacturer.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                        </Button>

                        <TextBox x:Name="productNum_textBox" 
                                 Width="Auto" 
                                 Margin="5,11,0,9"
                                 Text="0" 
                                 BorderBrush="White" 
                                 FontFamily="Arial Black" 
                                 Foreground="Gray" 
                                 FontSize="16" 
                                 VerticalContentAlignment="Center"
                                 MinWidth="18"
                                 KeyDown="productNum_textBox_KeyDown"/>

                        <Label x:Name="productsCount_label" VerticalAlignment="Center"
                               Content="из 0" Margin="-2,5" FontFamily="Arial Black" Width="Auto" Foreground="Gray" FontSize="16" Height="27"/>

                        <Button x:Name="FastSearch_button"
                                Template="{StaticResource btTemplate}" 
                                Height="40" Width="40"
                                Background="#FF50CBFF" 
                                VerticalAlignment="Top" 
                                Margin="10,0,5,0"
                                ToolTip="Быстрый поиск"
                            Click="FastSearch_button_Click">

                            <Image Source="/resources/images/fast_search.png" Height="32" Width="32" Margin="-30,-2,0,0"/>
                        </Button>


                        <Button x:Name="sortingGrid_button"
                              Template="{StaticResource btTemplate}" 
                              Height="40" Width="40"
                              Background="#FF50CBFF" 
                              VerticalAlignment="Top"
                              Margin="0,0,5,0"
                              ToolTip="Упорядочить данные в прайсе"
                              Click="SortButton_Click">

                            <Image Source="/resources/images/sortingAZ2.png" Height="25" Width="25" Margin="-30,-2,0,0"/>
                        </Button>

                        <Button x:Name="saveDBChanges_button"
                                Template="{StaticResource btTemplate}" 
                                Height="40" Width="40"
                                Background="MediumSeaGreen" 
                                VerticalAlignment="Top"
                                Margin="0,0,5,0"
                                ToolTip="Сохранить в прайс текущие изменения"
                                Click="saveDBChanges_button_ClickAsync">

                            <Image Source="/resources/images/save.png" Height="32" Width="32" Margin="-30,-2,0,0"/>
                        </Button>

                        <TextBlock x:Name="SortStatusTextBlock" FontSize="12" Foreground="DarkGray" />

                        <Border x:Name="WarningBorder" Width="auto" Background="Transparent" CornerRadius="10">
                            <Label x:Name="WarningLabel" Content="Для начала создайте раздел!"
                                   Foreground="White" FontSize="14"
                                   FontFamily="Arial Black"
                                   VerticalAlignment="Center" Margin="5,0,5,0"/>
                        </Border>
                    </StackPanel>


                    <Label Content="Английские наименования:" Margin="75,5" FontFamily="Arial Black" Width="Auto" Foreground="Gray" FontSize="16" Height="27" HorizontalAlignment="Right"/>

                    <ToggleButton x:Name="toggleButton" Background="OrangeRed" BorderThickness="2" BorderBrush="OrangeRed" HorizontalAlignment="Right" Margin="10,0"
                                      Checked="toggleButton_Checked"
                                      Unchecked="toggleButton_Unchecked"/>

                    <DataGrid x:Name="dataBaseGrid" Grid.Row="1" AutoGenerateColumns="False" Margin="5,0,5,0" Background="Transparent"
                              SelectionChanged="dataBaseGrid_SelectionChanged" MinRowHeight="20" SelectionMode="Extended" CanUserSortColumns="False"
                              MouseDoubleClick="dataBaseGrid_MouseDoubleClick" 
                              CellEditEnding="dataBaseGrid_CellEditEnding"                      
                              BeginningEdit="dataBaseGrid_BeginningEdit"
                              CanUserAddRows="False" FontFamily="Arial" Foreground="Black" 
                              RowHeaderWidth="0" SelectedIndex="0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Производитель" Binding="{Binding Manufacturer}" Width="20*" MinWidth="100" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[0]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[0], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[0], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Тип" Binding="{Binding Type}" Width="10*" MinWidth="100" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Наименование"  Binding="{Binding ProductName}" Width="50*" MinWidth="100" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[1]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[1], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[1], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Наименование на английском" Visibility="Collapsed"  Binding="{Binding EnglishProductName}" Width="50*" MinWidth="100" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[2]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[2], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[2], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>

                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Артикул"  Binding="{Binding Article}" Width="20*" MinWidth="100" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[3]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[3], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[3], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>

                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Ед. измерения"  Binding="{Binding Unit}" Width="7*" MinWidth="45" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[4]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[4], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[4], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>

                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Ед. измерения на английском" Visibility="Collapsed" Binding="{Binding EnglishUnit}" Width="12*" MinWidth="45" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[5]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[5], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[5], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>

                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTemplateColumn Header="Изображение" Width="10*" MinWidth="50" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Photo, Converter={StaticResource ByteArrayToImageSourceConverter}}" Width="25" Height="25" MaxWidth="100" MaxHeight="100" MinHeight="25" MinWidth="25" Margin="-3"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn Header="Цена"  
                                                Width="5*" MinWidth="75" IsReadOnly="False" Binding="{Binding Cost, Converter={StaticResource SpaceGroupDotDecimalConverter}}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Padding" Value="5,0"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <ToolTip>
                                                    <TextBlock Text="{Binding LastCostUpdate, StringFormat='Дата последнего обновления: {0}'}"/>
                                                </ToolTip>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[6]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[6], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[6], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>

                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>

                    </DataGrid>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="95"/>
                        </Grid.ColumnDefinitions>

                        <Label  x:Name="PriceInfo_label" Content="Вы находитесь в прайсе."
                                FontFamily="Arial Black" Margin="5,0"
                                Foreground="Gray" FontSize="14" HorizontalContentAlignment="Stretch"/>

                        <Label  x:Name="softwareVersion_label" Content="VX.X.XA" Grid.Column="1"
                                FontFamily="Arial Black" HorizontalAlignment="Right" Margin="5,0"
                                Foreground="Gray" FontSize="14" HorizontalContentAlignment="Stretch"/>
                    </Grid>

                </Grid>

                <!--Сетка с элементами управления и dataGrid расчётки-->
                <Grid x:Name="CalcDataGrid_Grid" Margin="0,0,0,0" Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="790"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="365"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="61"/>
                        <RowDefinition/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>

                    <Button x:Name="CalcDeleteSelectedProduct_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="OrangeRed" 
                            VerticalAlignment="Center" 
                            Margin="10,0,0,0" 
                            ToolTip="Удалить выбранный товар"
                            Click="CalcDeleteSelectedProduct_button_Click" HorizontalAlignment="Left">
                        <Image Source="/resources/images/delete_image.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <!--<Button x:Name="CalcRefresh_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="MediumSeaGreen" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="55,0,0,0" 
                            ToolTip="Обновить ценники в расчетке"
                            Click="CalcRefresh_button_Click">
                        <Image Source="pack://application:,,,/resources/images/refresh.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>-->

                    <Button x:Name="Calc_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="MediumSeaGreen" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="55,0,0,0" 
                            ToolTip="Расчёт"
                            Click="Calc_button_Click">

                        <Image Source="pack://application:,,,/resources/images/calc.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="MoveUp_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="MediumSeaGreen" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="100,0,0,0" 
                            ToolTip="Перенести выбранную позицию выше"
                            Click="MoveUp_button_Click">

                        <Image Source="pack://application:,,,/resources/images/moveUp.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="MoveDown_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="MediumSeaGreen" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="145,0,0,0" 
                            ToolTip="Перенести выбранную позицию ниже"
                            Click="MoveDown_button_Click">

                        <Image Source="pack://application:,,,/resources/images/moveDown.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="AddDependency_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="MediumSeaGreen" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="190,0,0,0"  
                            ToolTip="Создать зависимость"
                            Click="AddDependency_button_Click">

                        <Image Source="pack://application:,,,/resources/images/addDependency.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="DeleteDependency_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="Gray" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="235,0,0,0" 
                            ToolTip="Удалить зависимость" Click="DeleteDependency_button_Click_1">

                        <Image Source="pack://application:,,,/resources/images/deleteDependency.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="CopyCalc"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="MediumSeaGreen" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="280,0,0,0" 
                            ToolTip="Копировать выделенные товары"
                            Click="CopyCalc_Click">

                        <Image Source="pack://application:,,,/resources/images/copyCalc.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="PasteCalc"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="MediumSeaGreen" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="325,0,0,0" 
                            ToolTip="Вставить товары"
                            Click="PasteCalc_Click">

                        <Image Source="pack://application:,,,/resources/images/pasteCalc.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="ExportCalcToPrice_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="#FF50CBFF" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="370,0,0,0" 
                            ToolTip="Перенести выбранные строки в прайс"
                            Click="ExportCalcToPrice_button_Click">

                        <Image Source="pack://application:,,,/resources/images/exportCalcToPrice.png" Height="32" Width="32" Margin="-25,0,0,0"/>
                    </Button>

                    <Button  x:Name="ExportAllCalcToPrice_button"
                             Template="{StaticResource btTemplate}" 
                             Height="40" Width="40"
                             Background="#FF50CBFF" 
                             VerticalAlignment="Center" 
                             HorizontalAlignment="Left"
                             Margin="415,0,0,0" 
                             ToolTip="Перенести все строки в прайс"
                             Click="ExportAllCalcToPrice_button_Click">

                        <Image Source="pack://application:,,,/resources/images/exportAllCalcToPrice.png" Height="32" Width="32" Margin="-25,0,0,0"/>
                    </Button>

                    <Button x:Name="CalcCategory_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="#FF50CBFF" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="460,0,0,0" 
                            ToolTip="Создать категорию"
                            Click="CalcCategory_button_Click">

                        <Image Source="pack://application:,,,/resources/images/newCategory.png" Height="33" Width="33" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="CalcChapter_button"
                            Template="{StaticResource btTemplate}" 
                            Height="40" Width="40"
                            Background="#FF50CBFF" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            Margin="505,0,0,0" 
                            ToolTip="Создать раздел"
                            Click="CalcChapter_button_Click">

                        <Image Source="pack://application:,,,/resources/images/chapter.png" Height="32" Width="32" Margin="-30,0,0,0"/>
                    </Button>

                    <Label  Content="ИМЯ:" VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            ToolTip="Имя раздела или категории"
                            Margin="550,0,0,0"  FontFamily="Arial Black" Width="55" Foreground="Gray" FontSize="16" Height="27"/>

                    <TextBox x:Name="chapterName_textBox" Text="Раздел" Background="Transparent"
                             Width="72" 
                             VerticalAlignment="Center" 
                             HorizontalAlignment="Left"
                             Margin="600,0,0,0"
                             BorderBrush="White" 
                             FontFamily="Arial Black" 
                             Foreground="Gray" 
                             FontSize="16" 
                             ToolTip="Ввод имени раздела или категории"
                             VerticalContentAlignment="Center"
                             MinWidth="18"
                             KeyDown="productNum_textBox_KeyDown" Height="21"/>

                    <Border x:Name="CalcWarningBorder" Width="276" Background="Transparent" CornerRadius="12" Margin="0,10,5,10" Grid.Column="1" HorizontalAlignment="Right">
                        <Label x:Name="CalcWarningLabel"
                            HorizontalAlignment="Center"
                            Margin="5,0,5,0" Content="Для начала произведите расчёт" FontSize="14" FontFamily="Arial Black" VerticalAlignment="Center" Foreground="White"/>
                    </Border>

                    <Button x:Name="newCalc_button" Grid.Column="2"
                            Template="{StaticResource btTemplate}" Width="40"
                            Background="MediumSeaGreen" 
                            Margin="1,10,0,11" 
                            ToolTip="Новый расчёт"
                            Click="newCalc_menuItem_Click" HorizontalAlignment="Left">

                        <Image Source="pack://application:,,,/resources/images/newCalc.png" Height="31" Width="31" VerticalAlignment="Top" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="saveCalc_button" Grid.Column="2"
                            Template="{StaticResource btTemplate}" Width="40"
                            Background="MediumSeaGreen" 
                            Margin="46,10,0,11" 
                            ToolTip="Сохранить расчёт"
                            Click="saveCaalc_menuItem_Click" HorizontalAlignment="Left">

                        <Image Source="pack://application:,,,/resources/images/save.png" Height="31" Width="31" VerticalAlignment="Top" Margin="-30,0,0,0"/>
                    </Button>

                    <Button x:Name="openCalc_button" Grid.Column="2"
                            Template="{StaticResource btTemplate}" Width="40"
                            Background="MediumSeaGreen" 
                            HorizontalAlignment="Left"
                            Margin="91,10,0,11" 
                            ToolTip="Загрузить расчёт"
                            Click="openCalc_menuItem_Click">

                        <Image Source="pack://application:,,,/resources/images/openCalc.png" Height="30" Width="30" VerticalAlignment="Top" Margin="-27,0,0,0"/>
                    </Button>

                    <Button x:Name="addCalc_button" Grid.Column="2"
                            Template="{StaticResource btTemplate}" Width="40"
                            Background="MediumSeaGreen" 
                            HorizontalAlignment="Left"
                            Margin="136,10,0,11" 
                            ToolTip="Добавить в расчёт"
                            Click="addCaalc_menuItem_Click">

                        <Image Source="pack://application:,,,/resources/images/addCalc.png" Height="30" Width="30" VerticalAlignment="Top" Margin="-27,0,0,0"/>
                    </Button>

                    <Button x:Name="openDepartmentRequesPage_button" Grid.Column="2"
                                    Template="{StaticResource btTemplate}" 
                                    Height="40"
                                    Width="40"
                                    Background="Coral" 
                                    VerticalAlignment="Center"
                                    Margin="172,0,133,0"
                                    ToolTip="Открыть поле исходных данных"
                                    Click="openDepartmentRequesPage_button_Click">

                        <Image Source="/resources/images/requestIcon.png" Height="30" Width="30" Margin="-28,-2,0,0"/>
                    </Button>

                    <Button x:Name="CalcToExcel_button" Grid.Column="2"
                            Template="{StaticResource btTemplate}" Width="60"
                            Background="MediumSeaGreen" 
                            HorizontalAlignment="Left"
                            Margin="228,10,0,11"  
                            ToolTip="Экспортировать в Excel"
                            Click="CalcToExcel_button_Click">

                        <Image Source="pack://application:,,,/resources/images/calcToExcel.png" Height="30" Width="50" VerticalAlignment="Top" Margin="-30,0,0,0"/>
                    </Button>
                    <Button x:Name="CalcToNewSheetExcel_button" Grid.Column="2"
                            Template="{StaticResource btTemplate}" Width="60"
                            Background="MediumSeaGreen" 
                            ToolTip="Экспортировать в Excel новым листом"
                            HorizontalAlignment="Left"
                            Margin="294,10,0,11"
                            Click="CalcToNewSheetExcel_button_Click">

                        <Image Source="pack://application:,,,/resources/images/calcToNewSheetExcel.png" Height="30" Width="50" VerticalAlignment="Top" Margin="-30,0,0,0"/>
                    </Button>

                    <DataGrid x:Name="CalcDataGrid" Grid.Row="1" AutoGenerateColumns="False" Margin="5,0,5,0" Background="White" Foreground="Black" FontFamily="Arial" 
                              CanUserAddRows="False" HorizontalScrollBarVisibility="Disabled" RowHeaderWidth="0" MinRowHeight="22" SelectionMode="Extended"
                              SelectedCellsChanged="CalcdataGrid_SelectedCellsChanged"
                              CellEditEnding="CalcDataGrid_CellEditEnding" Grid.ColumnSpan="3"
                              BeginningEdit ="CalcDataGrid_BeginningEdit"
                              CanUserSortColumns="False">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="№" Width="1*" MinWidth="75" MaxWidth="75" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <Canvas Visibility="{Binding ID, Converter={StaticResource IdToVisibilityConverter}}" 
                                                    Width="70"
                                                    Margin="10,-15,-57,0"
                                                    VerticalAlignment="Stretch"
                                                    Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=DataGridRow}}">
                                                <Path Stroke="SteelBlue" StrokeThickness="1.2">
                                                    <Path.Data>
                                                        <MultiBinding Converter="{StaticResource IdAndHeightToLineConverter}">
                                                            <Binding Path="ID"/>
                                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType=DataGridRow}" />
                                                        </MultiBinding>
                                                    </Path.Data>
                                                </Path>
                                            </Canvas>

                                            <Button x:Name="dataGridHideButton"
                                                    FontFamily="Arial Black"
                                                    Background="White" 
                                                    FontSize="17"
                                                    Content="{Binding hideButtonContext}"
                                                    Template="{StaticResource dataGridBtTemplate}" 
                                                    Width="21" Height="22"
                                                    Visibility="{Binding isHidingButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    Click="dataGridHideButton_Click"
                                                    MouseEnter="dataGridHideButton_MouseEnter"
                                                    MouseLeave="dataGridHideButton_MouseLeave">

                                            </Button>
                                            <Image Source="pack://application:,,,/resources/images/hideCategory.png"
                                                   Width="25" Height="20" 
                                                   ToolTip="Скрыт для экспорта в Excel"
                                                   Margin="12,0,0,0">
                                                <Image.Visibility>
                                                    <MultiBinding Converter="{StaticResource CategoryHideIconVisibilityMultiConverter}">
                                                        <Binding Path="ID"/>
                                                        <!-- Привязка к ID элемента -->
                                                        <Binding Path="settings.IsInsertExcelCategory"
         RelativeSource="{RelativeSource AncestorType={x:Type Window}}"/>
                                                        <!-- Привязка к настройке -->
                                                    </MultiBinding>
                                                </Image.Visibility>
                                            </Image>
                                            <Image Source="{Binding HasErrorInDependency, Converter={StaticResource BooleanErrorToDependencyImageSourceConverter}}"
                                                Width="25" Height="20" 
                                                   Margin="11,0,0,0"
                                                Visibility="{Binding isDependency, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <TextBlock Text="{Binding Num, Converter={StaticResource NullToEmptyStringConverter}}"
                                                    Margin="18,0,0,0"
                                                    Visibility="{Binding isDependency, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>

                                            <!--pack://application:,,,/resources/images/dependency.png-->
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn Header="Производитель" Binding="{Binding Manufacturer}" Width="6*" MinWidth="120" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[0]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[0], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[0], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>

                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Наименование"  Binding="{Binding ProductName}" Width="30*" MinWidth="50" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[1]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[1], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[1], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Visibility="Collapsed" Header="Наименование на английском"  Binding="{Binding EnglishProductName}" Width="30*" MinWidth="50" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[2]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[2], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[2], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Артикул"  Binding="{Binding Article}" Width="6*" MinWidth="70" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[3]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[3], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[3], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Ед. измерения"  Binding="{Binding Unit}" Width="5*" MinWidth="50" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[4]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[4], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[4], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Ед. измерения на английском" Visibility="Collapsed"  Binding="{Binding EnglishUnit}" Width="5*" MinWidth="50" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[5]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[5], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[5], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTemplateColumn Header="Изображение" Width="5*" MinWidth="50" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Photo, Converter={StaticResource ByteArrayToImageSourceConverter}}" Width="25" Height="25" MaxWidth="100" MaxHeight="100" MinHeight="25" MinWidth="25" Margin="-3"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn Header="Цена"  Binding="{Binding Cost, Converter={StaticResource SpaceGroupDotDecimalConverter}}" Width="2*" MinWidth="75" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="5,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>

                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[6]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[6], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[6], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Количество"  Binding="{Binding Count, Converter={StaticResource SpaceGroupDotDecimalConverter}}" Width="5*" MinWidth="50" IsReadOnly="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="5,0"/>

                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="GotFocus" Handler="DataGridCell_GotFocus"/>
                                        <EventSetter Event="LostFocus" Handler="DataGridCell_LostFocus"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCellCorrects[7]}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Некорректное значение"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[7], Converter = {StaticResource BoolToCornflowerBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>

                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="BorderBrush" Value="{Binding IsCellCorrects[7], Converter = {StaticResource BoolToLightSkyBlueBrushConverter}}"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Сумма"  Binding="{Binding TotalCost, Converter={StaticResource SpaceGroupDotDecimalConverter}}" Width="5*" MinWidth="75" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="ID" Visibility="Collapsed"  Binding="{Binding ID}" Width="2*" MinWidth="50" IsReadOnly="True"></DataGridTextColumn>
                            <DataGridTextColumn Header="Примечание"  Binding="{Binding Note}" Width="9*" MinWidth="100" IsReadOnly="False" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Visibility" Value="{Binding isVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Setter Property="Background" Value="{Binding RowColor}"/>
                                <Setter Property="Foreground" Value="{Binding RowForegroundColor}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                    <Label  x:Name="CalcInfo_label" Content="Вы находитесь в расчёте."
                            Grid.Row="2"
                            FontFamily="Arial Black"
                            Foreground="Gray" FontSize="14" HorizontalContentAlignment="Stretch" Margin="5,0,0,-2" />

                    <Label  x:Name="CalcPath_label" Content="Имя файла расчёта: - "
                            Grid.Row="2"
                            FontFamily="Arial Black"
                            Foreground="Gray" FontSize="14" HorizontalContentAlignment="Right" Margin="0,0,5,-2" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
    
    
